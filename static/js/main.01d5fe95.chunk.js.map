{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","searcResult","setSearcResult","isLoading","setIsLoading","hasError","setHasError","isSubmit","setIsSubmit","getNewMovie","useCallback","newMovie","Title","Plot","imdbID","Poster","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","response","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","some","addedMovie","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01d5fe95.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { ChangeEvent, useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { getMovie } from '../../api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [searcResult, setSearcResult] = useState<MovieData | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(query)\n      .then((response) => {\n        if ((response as MovieData).Title) {\n          setSearcResult(response as MovieData);\n          setIsSubmit(true);\n\n          return;\n        }\n\n        setHasError(true);\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleClear = () => {\n    setQuery('');\n    setHasError(false);\n    setIsSubmit(false);\n    setSearcResult(null);\n  };\n\n  const handleQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setHasError(false);\n    setIsSubmit(false);\n    setSearcResult(null);\n  };\n\n  const getNewMovie = useCallback((newMovie) => {\n    return {\n      title: newMovie.Title,\n      description: newMovie.Plot,\n      imdbId: newMovie.imdbID,\n      imgUrl: newMovie.Poster !== 'N/A'\n        ? newMovie.Poster\n        : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n      imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n    };\n  }, [searcResult]);\n\n  const handleAddButton = () => {\n    addMovie(getNewMovie(searcResult));\n    handleClear();\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleQuery}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {'Can\\'t find a movie with such a title'}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {searcResult && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {isSubmit && !isLoading && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={getNewMovie(searcResult)} />\n        </div>\n      )}\n\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=19dea528';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    if (movies.some(addedMovie => movie.imdbId === addedMovie.imdbId)) {\n      return;\n    }\n\n    setMovies((prev) => [...prev, movie]);\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}